#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Author: Edilson Alzemand

import sys
import os
import pynotify
import re
import socket

'''from random import choice
future>>>>>
lista = [1,2,3,4,5,6,7,8,9]
print choice(lista)'''

pynotify.init("ubi")
comand = sys.argv[1:]
enter = ' '.join(comand)
enter = enter.lower()
enter = enter.replace('?', '')
enter = enter.replace('!', '')

def fun (x):
    if x == 'hi' or x == 'hello' or x == 'hey':
        os.system("finger `whoami` | sed 's/.*: *//;q' > log/log.txt")
        a = open ("log/log.txt", "r")
        b = a.read()
        c = 'Hi, '
        d = c + b
        a.close()
        print ("ubi: " + d)
        notify = pynotify.Notification( d , "", "/usr/bin/ubi.svg")
        notify.show()
    elif x == 'i love you' or  x == 'love you' or x == 'love u':
        notify = pynotify.Notification("")
        notify.show()
    elif x == '':
        print ("How can I help you?\n")
        notify = pynotify.Notification("Hi! I am ubi. How can I help you?", "type a command", "/usr/bin/ubi.svg")
        notify.show()
    else:
        return False

def username ():
        nome ="finger `whoami` | sed 's/.*: *//;q'"
        os.system("whoami > log/log.txt")
        a = open ("log/log.txt", "r")
        b = a.read()
        c = 'Your username is '
        d = c + b
        a.close()
        print ("ubi: " + d)
        notify = pynotify.Notification( d , "" , "/usr/bin/ubi.svg")
        notify.show()

def name():
        nome ="finger `whoami` | sed 's/.*: *//;q'"
        os.system("finger `whoami` | sed 's/.*: *//;q' > log/log.txt")
        a = open ("log/log.txt", "r")
        b = a.read()
        c = 'Your name is '
        d = c + b
        a.close()
        print ("ubi: " + d)
        notify = pynotify.Notification( d , "" , "/usr/bin/ubi.svg")
        notify.show()

def ip ():
    try:
        print ("connecting...")
        os.system('curl -sL http://pannous.net/ip.php > log/log.txt')
        a = open ("log/log.txt", "r")
        b = a.read()
        c = ' '
        d = c + b
        a.close()
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
        s.connect(("ubuntu.com",80))
        e = (s.getsockname()[0])
        s.close()
        print ("ubi: local " + e)
        print ("ubi: external" + d)
        notify = pynotify.Notification('local: ' + e , 'external: ' + d , "/usr/bin/ubi.svg")
        notify.show()
    except:
        print "Hoo! You are not connected to the Internet"
        notify = pynotify.Notification("Hoo! You are not connected to the Internet" , "", "/usr/bin/ubi.svg")
        notify.show()

def speedtest ():
    print ("ubi: Ok, connecting...")
    os.system("./lib/speedtest --simple > log/speedtest_log.txt")
    a = open("log/speedtest_log.txt", "r")
    ping = a.readline()
    download = a.readline()
    upload = a.readline()
    notify = pynotify.Notification( download + upload , ping , "/usr/bin/ubi.svg")
    print (download + upload + ping)
    notify.show()

def search (x):
    x = x.replace ('who' ,'')
    x = x.replace ('search', '')
    x = x.replace ('for', '')
    x = x.replace ('is', '')
    notify = pynotify.Notification("okay, I look" + x + " for you" , "", "/usr/bin/ubi.svg")
    notify.show()
    os.system("./lib/ubi-search-module " + x)

def sorry ():
    print ("ubi: I'm sorry I didn't understand your question\n" )
    notify = pynotify.Notification( "I'm sorry I didn't understand your question" , "", "/usr/bin/ubi.svg")
    notify.show()

a1 = enter.find('my username')
a2 = enter.find('my name')
a3 = enter.find('my ip')
a4 = enter.find('speedtest')
a5 = enter.split()

if enter[a1:] == 'my username':
    username()
elif enter[a2:] == 'my name':
    name()
elif enter[a3:] == 'my ip':
    ip()
elif enter[a4:] == 'speedtest':
    speedtest()
elif a5 == []:
    fun(enter)
elif a5[0] == 'who' and a5[1] == 'is':
    search(enter)
elif a5[0] == 'search' and a5[1] == 'for':
    search(enter)


elif fun(enter) == False:
        sorry()
